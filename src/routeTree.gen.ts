/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainImport } from './routes/_main'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthSearchImport } from './routes/_auth.search'

// Create Virtual Routes

const SignUpLazyImport = createFileRoute('/sign-up')()
const SignInLazyImport = createFileRoute('/sign-in')()
const MainIndexLazyImport = createFileRoute('/_main/')()
const MainStreamLazyImport = createFileRoute('/_main/stream')()
const MainPartyLazyImport = createFileRoute('/_main/party')()
const MainGetPremiumLazyImport = createFileRoute('/_main/get-premium')()

// Create/Update Routes

const SignUpLazyRoute = SignUpLazyImport.update({
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sign-up.lazy').then((d) => d.Route))

const SignInLazyRoute = SignInLazyImport.update({
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sign-in.lazy').then((d) => d.Route))

const MainRoute = MainImport.update({
  id: '/_main',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const MainIndexLazyRoute = MainIndexLazyImport.update({
  path: '/',
  getParentRoute: () => MainRoute,
} as any).lazy(() => import('./routes/_main.index.lazy').then((d) => d.Route))

const MainStreamLazyRoute = MainStreamLazyImport.update({
  path: '/stream',
  getParentRoute: () => MainRoute,
} as any).lazy(() => import('./routes/_main.stream.lazy').then((d) => d.Route))

const MainPartyLazyRoute = MainPartyLazyImport.update({
  path: '/party',
  getParentRoute: () => MainRoute,
} as any).lazy(() => import('./routes/_main.party.lazy').then((d) => d.Route))

const MainGetPremiumLazyRoute = MainGetPremiumLazyImport.update({
  path: '/get-premium',
  getParentRoute: () => MainRoute,
} as any).lazy(() =>
  import('./routes/_main.get-premium.lazy').then((d) => d.Route),
)

const AuthSearchRoute = AuthSearchImport.update({
  path: '/search',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth.search.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInLazyImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/search': {
      id: '/_auth/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof AuthSearchImport
      parentRoute: typeof AuthImport
    }
    '/_main/get-premium': {
      id: '/_main/get-premium'
      path: '/get-premium'
      fullPath: '/get-premium'
      preLoaderRoute: typeof MainGetPremiumLazyImport
      parentRoute: typeof MainImport
    }
    '/_main/party': {
      id: '/_main/party'
      path: '/party'
      fullPath: '/party'
      preLoaderRoute: typeof MainPartyLazyImport
      parentRoute: typeof MainImport
    }
    '/_main/stream': {
      id: '/_main/stream'
      path: '/stream'
      fullPath: '/stream'
      preLoaderRoute: typeof MainStreamLazyImport
      parentRoute: typeof MainImport
    }
    '/_main/': {
      id: '/_main/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainIndexLazyImport
      parentRoute: typeof MainImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRoute: AuthRoute.addChildren({ AuthSearchRoute }),
  MainRoute: MainRoute.addChildren({
    MainGetPremiumLazyRoute,
    MainPartyLazyRoute,
    MainStreamLazyRoute,
    MainIndexLazyRoute,
  }),
  SignInLazyRoute,
  SignUpLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_main",
        "/sign-in",
        "/sign-up"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/search"
      ]
    },
    "/_main": {
      "filePath": "_main.tsx",
      "children": [
        "/_main/get-premium",
        "/_main/party",
        "/_main/stream",
        "/_main/"
      ]
    },
    "/sign-in": {
      "filePath": "sign-in.lazy.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.lazy.tsx"
    },
    "/_auth/search": {
      "filePath": "_auth.search.tsx",
      "parent": "/_auth"
    },
    "/_main/get-premium": {
      "filePath": "_main.get-premium.lazy.tsx",
      "parent": "/_main"
    },
    "/_main/party": {
      "filePath": "_main.party.lazy.tsx",
      "parent": "/_main"
    },
    "/_main/stream": {
      "filePath": "_main.stream.lazy.tsx",
      "parent": "/_main"
    },
    "/_main/": {
      "filePath": "_main.index.lazy.tsx",
      "parent": "/_main"
    }
  }
}
ROUTE_MANIFEST_END */
